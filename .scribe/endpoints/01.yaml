name: 'User management'
description: |-

  Activities related to the management of the currently authenticated user
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'User management'
      groupDescription: |-

        Activities related to the management of the currently authenticated user
      subgroup: ''
      subgroupDescription: ''
      title: 'Current user'
      description: |-
        Returns a censored representation of the current user instance.
        The response will always include the plain representation of the token used to authenticate the user
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      includes:
        name: includes
        description: 'Comma separated list of user relation to include'
        required: false
        example: reservations
        type: string
        custom: []
    cleanQueryParameters:
      includes: reservations
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "type": "user",
                  "id": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                  "attributes": {
                      "name": "Devonte Goldner",
                      "email": "imo********************",
                      "email_verified_at": "18\/02\/2023 11:05:51",
                      "token": "2|aFGHN9Ox9Uc42XfLqrXlY2xAzNwhQLDb7kIf3rjN"
                  },
                  "relationships": {
                      "reservations": {
                          "data": [
                              {
                                  "type": "reservation",
                                  "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180"
                              }
                          ]
                      }
                  }
              },
              "included": [
                  {
                      "type": "reservation",
                      "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180",
                      "attributes": {
                          "user": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                          "event": "evt_d7e868f3083344f6bec2548db7979d6b",
                          "activity": "act_4c0158279c0148439fb285ebc7ad8c12"
                      }
                  }
              ],
              "meta": {
                  "success": true,
                  "errors": null
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields:
      data:
        name: data
        description: 'Container for resource.'
        required: false
        example: null
        type: object
        custom: []
      data.type:
        name: data.type
        description: 'Resource return type as of JSON:API standard, always equal to `user`.'
        required: false
        example: null
        type: string
        custom: []
      data.id:
        name: data.id
        description: 'Resource unique identifier, always starts with `usr_`.'
        required: false
        example: null
        type: string
        custom: []
      data.attributes:
        name: data.attributes
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: 'Current user full name.'
        required: false
        example: null
        type: string
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Current user censored email.'
        required: false
        example: null
        type: string
        custom: []
      data.attributes.email_verified_at:
        name: data.attributes.email_verified_at
        description: |-
          Email verification datetime or null, if this field is
                         null for a given user he won't be allowed to reserve any spot.
        required: false
        example: null
        type: '?string'
        custom: []
      data.attributes.token:
        name: data.attributes.token
        description: 'Current user authentication token.'
        required: false
        example: null
        type: string
        custom: []
      data.relationships:
        name: data.relationships
        description: 'Wrapper for included relationships.'
        required: false
        example: null
        type: '?object'
        custom: []
      data.relationships.reservations:
        name: data.relationships.reservations
        description: 'Wrapper for reservation identification data.'
        required: false
        example: null
        type: '?object'
        custom: []
      data.relationships.reservations.data:
        name: data.relationships.reservations.data
        description: 'Reservations identifier data container.'
        required: false
        example: null
        type: 'object[]'
        custom: []
      'data.relationships.reservations.data[].type':
        name: 'data.relationships.reservations.data[].type'
        description: |-
          Resource return type as of JSON:API standard,
                         always equal to `reservation`
        required: false
        example: null
        type: string
        custom: []
      'data.relationships.reservations.data[].id':
        name: 'data.relationships.reservations.data[].id'
        description: |-
          Resource unique identifier, always starts with
                         `resrv_`.
        required: false
        example: null
        type: string
        custom: []
      included:
        name: included
        description: 'Container for included relationships.'
        required: false
        example: null
        type: '?object[]'
        custom: []
      'included[].type':
        name: 'included[].type'
        description: 'Resource return type as of JSON:API standard.'
        required: false
        example: null
        type: string
        custom: []
      'included[].id':
        name: 'included[].id'
        description: 'Resource unique identifier.'
        required: false
        example: null
        type: string
        custom: []
      'included[].attributes':
        name: 'included[].attributes'
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: []
      meta:
        name: meta
        description: 'Container for metadata.'
        required: false
        example: null
        type: object
        custom: []
      meta.success:
        name: meta.success
        description: 'Response status summary, if `true` the call was successful.'
        required: false
        example: null
        type: boolean
        custom: []
      meta.errors:
        name: meta.errors
        description: 'null|object[] If one or more errors occur this field will be filled with errors.'
        required: false
        example: null
        type: ''
        custom: []
      'meta.errors[].reference_code':
        name: 'meta.errors[].reference_code'
        description: 'Error reference code for easy front-end retrieval.'
        required: false
        example: null
        type: integer
        custom: []
      'meta.errors[].field':
        name: 'meta.errors[].field'
        description: |-
          null|string If an error occur linked to a form field this field will handle
                         the field name the error references to.
        required: false
        example: null
        type: ''
        custom: []
      'meta.errors[].message':
        name: 'meta.errors[].message'
        description: 'The error message(s).'
        required: false
        example: null
        type: 'string|string[]'
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZcgP8Edh5v1463ae6fabkVD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/login
    metadata:
      groupName: 'User management'
      groupDescription: |-

        Activities related to the management of the currently authenticated user
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: |-
        Handle the login of a pre-registered account via API, this method forwards the login logic to the default
        Fortify controller but adds a layer of indirection.

        The forwarded call is received and analyzed, if the login request was successful a JSON:API response is created
        with the newly logged-in user.

        <aside class="notice">
        Note that the user is not authenticated in the current request, the user should be authenticated by subsequent
        front-end requests.
        </aside>

        If the login was not successful based on the exception type an appropriate JSON:API response is created and
        returned to the client.
      authenticated: true
      custom: [ ]
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters:
      includes:
        name: includes
        description: 'Comma separated list of user relation to include'
        required: false
        example: reservations
        type: string
        custom: [ ]
    cleanQueryParameters:
      includes: reservations
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: beatae
        type: string
        custom: [ ]
      password:
        name: password
        description: ''
        required: true
        example: '+V90BtZ`A;V]'
        type: string
        custom: [ ]
    cleanBodyParameters:
      name: beatae
      password: '+V90BtZ`A;V]'
    fileParameters: [ ]
    responses:
      - status: 200
        content: |
          {
              "data": {
                  "type": "user",
                  "id": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                  "attributes": {
                      "name": "Devonte Goldner",
                      "email": "imo********************",
                      "email_verified_at": "18\/02\/2023 11:05:51",
                      "token": "2|aFGHN9Ox9Uc42XfLqrXlY2xAzNwhQLDb7kIf3rjN"
                  },
                  "relationships": {
                      "reservations": {
                          "data": [
                              {
                                  "type": "reservation",
                                  "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180"
                              }
                          ]
                      }
                  }
              },
              "included": [
                  {
                      "type": "reservation",
                      "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180",
                      "attributes": {
                          "user": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                          "event": "evt_d7e868f3083344f6bec2548db7979d6b",
                          "activity": "act_4c0158279c0148439fb285ebc7ad8c12"
                      }
                  }
              ],
              "meta": {
                  "success": true,
                  "errors": null
              }
          }
        headers: [ ]
        description: 'Login successful'
        custom: [ ]
      - status: 422
        content: |
          {
              "data": [],
              "meta": {
                  "success": false,
                  "errors": [
                      {
                          "reference_code": 0,
                          "field": "name",
                          "message": [
                              "These credentials do not match our records."
                          ]
                      }
                  ]
              }
          }
        headers: [ ]
        description: 'Login error'
        custom: [ ]
    responseFields:
      data:
        name: data
        description: 'Container for resource.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.type:
        name: data.type
        description: 'Resource return type as of JSON:API standard, always equal to `user`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.id:
        name: data.id
        description: 'Resource unique identifier, always starts with `usr_`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes:
        name: data.attributes
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.attributes.name:
        name: data.attributes.name
        description: 'Current user full name.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.email:
        name: data.attributes.email
        description: 'Current user censored email.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.email_verified_at:
        name: data.attributes.email_verified_at
        description: |-
          Email verification datetime or null, if this field is
                         null for a given user he won't be allowed to reserve any spot.
        required: false
        example: null
        type: '?string'
        custom: [ ]
      data.attributes.token:
        name: data.attributes.token
        description: 'Current user authentication token.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.relationships:
        name: data.relationships
        description: 'Wrapper for included relationships.'
        required: false
        example: null
        type: '?object'
        custom: [ ]
      data.relationships.reservations:
        name: data.relationships.reservations
        description: 'Wrapper for reservation identification data.'
        required: false
        example: null
        type: '?object'
        custom: [ ]
      data.relationships.reservations.data:
        name: data.relationships.reservations.data
        description: 'Reservations identifier data container.'
        required: false
        example: null
        type: 'object[]'
        custom: [ ]
      'data.relationships.reservations.data[].type':
        name: 'data.relationships.reservations.data[].type'
        description: |-
          Resource return type as of JSON:API standard,
                         always equal to `reservation`
        required: false
        example: null
        type: string
        custom: [ ]
      'data.relationships.reservations.data[].id':
        name: 'data.relationships.reservations.data[].id'
        description: |-
          Resource unique identifier, always starts with
                         `resrv_`.
        required: false
        example: null
        type: string
        custom: [ ]
      included:
        name: included
        description: 'Container for included relationships.'
        required: false
        example: null
        type: '?object[]'
        custom: [ ]
      'included[].type':
        name: 'included[].type'
        description: 'Resource return type as of JSON:API standard.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].id':
        name: 'included[].id'
        description: 'Resource unique identifier.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].attributes':
        name: 'included[].attributes'
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta:
        name: meta
        description: 'Container for metadata.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta.success:
        name: meta.success
        description: 'Response status summary, if `true` the call was successful.'
        required: false
        example: null
        type: boolean
        custom: [ ]
      meta.errors:
        name: meta.errors
        description: 'null|object[] If one or more errors occur this field will be filled with errors.'
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].reference_code':
        name: 'meta.errors[].reference_code'
        description: 'Error reference code for easy front-end retrieval.'
        required: false
        example: null
        type: integer
        custom: [ ]
      'meta.errors[].field':
        name: 'meta.errors[].field'
        description: |-
          null|string If an error occur linked to a form field this field will handle
                         the field name the error references to.
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].message':
        name: 'meta.errors[].message'
        description: 'The error message(s).'
        required: false
        example: null
        type: 'string|string[]'
        custom: [ ]
    auth:
      - headers
      - Authorization
      - 'Bearer vEh3aZf65e46gbcPDkV1a8d'
    controller: null
    method: null
    route: null
    custom: [ ]
  -
    httpMethods:
      - POST
    uri: api/users/email/verify/request-new
    metadata:
      groupName: 'User management'
      groupDescription: |-

        Activities related to the management of the currently authenticated user
      subgroup: ''
      subgroupDescription: ''
      title: 'Request new verification email'
      description: 'Send a new email verification link once requested or return the current user instance if already verified'
      authenticated: true
      custom: [ ]
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 200
        content: |
          {
              "data": {
                  "type": "user",
                  "id": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                  "attributes": {
                      "name": "Devonte Goldner",
                      "email": "imo********************",
                      "email_verified_at": "18\/02\/2023 11:05:51",
                      "token": "2|aFGHN9Ox9Uc42XfLqrXlY2xAzNwhQLDb7kIf3rjN"
                  },
                  "relationships": {
                      "reservations": {
                          "data": [
                              {
                                  "type": "reservation",
                                  "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180"
                              }
                          ]
                      }
                  }
              },
              "included": [
                  {
                      "type": "reservation",
                      "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180",
                      "attributes": {
                          "user": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                          "event": "evt_d7e868f3083344f6bec2548db7979d6b",
                          "activity": "act_4c0158279c0148439fb285ebc7ad8c12"
                      }
                  }
              ],
              "meta": {
                  "success": true,
                  "errors": null
              }
          }
        headers: [ ]
        description: 'Email already verified'
        custom: [ ]
      - status: 200
        content: |
          {
              "data": [],
              "meta": {
                  "success": true,
                  "errors": null
              }
          }
        headers: [ ]
        description: 'Verification email sent'
        custom: [ ]
    responseFields:
      data:
        name: data
        description: 'Container for resource.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.type:
        name: data.type
        description: 'Resource return type as of JSON:API standard, always equal to `user`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.id:
        name: data.id
        description: 'Resource unique identifier, always starts with `usr_`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes:
        name: data.attributes
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.attributes.name:
        name: data.attributes.name
        description: 'Current user full name.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.email:
        name: data.attributes.email
        description: 'Current user censored email.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.email_verified_at:
        name: data.attributes.email_verified_at
        description: |-
          Email verification datetime or null, if this field is
                         null for a given user he won't be allowed to reserve any spot.
        required: false
        example: null
        type: '?string'
        custom: [ ]
      data.attributes.token:
        name: data.attributes.token
        description: 'Current user authentication token.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.relationships:
        name: data.relationships
        description: 'Wrapper for included relationships.'
        required: false
        example: null
        type: '?object'
        custom: [ ]
      data.relationships.reservations:
        name: data.relationships.reservations
        description: 'Wrapper for reservation identification data.'
        required: false
        example: null
        type: '?object'
        custom: [ ]
      data.relationships.reservations.data:
        name: data.relationships.reservations.data
        description: 'Reservations identifier data container.'
        required: false
        example: null
        type: 'object[]'
        custom: [ ]
      'data.relationships.reservations.data[].type':
        name: 'data.relationships.reservations.data[].type'
        description: |-
          Resource return type as of JSON:API standard,
                         always equal to `reservation`
        required: false
        example: null
        type: string
        custom: [ ]
      'data.relationships.reservations.data[].id':
        name: 'data.relationships.reservations.data[].id'
        description: |-
          Resource unique identifier, always starts with
                         `resrv_`.
        required: false
        example: null
        type: string
        custom: [ ]
      included:
        name: included
        description: 'Container for included relationships.'
        required: false
        example: null
        type: '?object[]'
        custom: [ ]
      'included[].type':
        name: 'included[].type'
        description: 'Resource return type as of JSON:API standard.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].id':
        name: 'included[].id'
        description: 'Resource unique identifier.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].attributes':
        name: 'included[].attributes'
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta:
        name: meta
        description: 'Container for metadata.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta.success:
        name: meta.success
        description: 'Response status summary, if `true` the call was successful.'
        required: false
        example: null
        type: boolean
        custom: [ ]
      meta.errors:
        name: meta.errors
        description: 'null|object[] If one or more errors occur this field will be filled with errors.'
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].reference_code':
        name: 'meta.errors[].reference_code'
        description: 'Error reference code for easy front-end retrieval.'
        required: false
        example: null
        type: integer
        custom: [ ]
      'meta.errors[].field':
        name: 'meta.errors[].field'
        description: |-
          null|string If an error occur linked to a form field this field will handle
                         the field name the error references to.
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].message':
        name: 'meta.errors[].message'
        description: 'The error message(s).'
        required: false
        example: null
        type: 'string|string[]'
        custom: [ ]
    auth:
      - headers
      - Authorization
      - 'Bearer vha6VcDP1Eefba3Z4586dgk'
    controller: null
    method: null
    route: null
    custom: [ ]
  -
    httpMethods:
      - POST
    uri: 'api/users/email/verify/{id}/{hash}'
    metadata:
      groupName: 'User management'
      groupDescription: |-

        Activities related to the management of the currently authenticated user
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify email'
      description: "Handle the email verification, forwarding the verification call to Fortify's default controller."
      authenticated: true
      custom: [ ]
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The identifier of the user to verify.'
        required: true
        example: 1
        type: integer
        custom: [ ]
      hash:
        name: hash
        description: 'Verification hash.'
        required: true
        example: 567159d622ffbb50b11b0efd307be358624a26ee
        type: string
        custom: [ ]
    cleanUrlParameters:
      id: 1
      hash: 567159d622ffbb50b11b0efd307be358624a26ee
    queryParameters:
      expires:
        name: expires
        description: 'expiration timestamp of the verification link.'
        required: true
        example: 1676736522
        type: integer
        custom: [ ]
      signature:
        name: signature
        description: 'Url signature hash.'
        required: true
        example: 2e99a9278bcba67a7b52acbb6f2fb822c72c6d4b1d63fb059033439059d9f250
        type: string
        custom: [ ]
    cleanQueryParameters:
      expires: 1676736522
      signature: 2e99a9278bcba67a7b52acbb6f2fb822c72c6d4b1d63fb059033439059d9f250
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 200
        content: |
          {
              "data": {
                  "type": "user",
                  "id": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                  "attributes": {
                      "name": "Devonte Goldner",
                      "email": "imo********************",
                      "email_verified_at": "18\/02\/2023 11:05:51",
                      "token": "2|aFGHN9Ox9Uc42XfLqrXlY2xAzNwhQLDb7kIf3rjN"
                  },
                  "relationships": {
                      "reservations": {
                          "data": [
                              {
                                  "type": "reservation",
                                  "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180"
                              }
                          ]
                      }
                  }
              },
              "included": [
                  {
                      "type": "reservation",
                      "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180",
                      "attributes": {
                          "user": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                          "event": "evt_d7e868f3083344f6bec2548db7979d6b",
                          "activity": "act_4c0158279c0148439fb285ebc7ad8c12"
                      }
                  }
              ],
              "meta": {
                  "success": true,
                  "errors": null
              }
          }
        headers: [ ]
        description: ''
        custom: [ ]
    responseFields:
      data:
        name: data
        description: 'Container for resource.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.type:
        name: data.type
        description: 'Resource return type as of JSON:API standard, always equal to `user`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.id:
        name: data.id
        description: 'Resource unique identifier, always starts with `usr_`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes:
        name: data.attributes
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.attributes.name:
        name: data.attributes.name
        description: 'Current user full name.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.email:
        name: data.attributes.email
        description: 'Current user censored email.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.email_verified_at:
        name: data.attributes.email_verified_at
        description: |-
          Email verification datetime or null, if this field is
                         null for a given user he won't be allowed to reserve any spot.
        required: false
        example: null
        type: '?string'
        custom: [ ]
      data.attributes.token:
        name: data.attributes.token
        description: 'Current user authentication token.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.relationships:
        name: data.relationships
        description: 'Wrapper for included relationships.'
        required: false
        example: null
        type: '?object'
        custom: [ ]
      data.relationships.reservations:
        name: data.relationships.reservations
        description: 'Wrapper for reservation identification data.'
        required: false
        example: null
        type: '?object'
        custom: [ ]
      data.relationships.reservations.data:
        name: data.relationships.reservations.data
        description: 'Reservations identifier data container.'
        required: false
        example: null
        type: 'object[]'
        custom: [ ]
      'data.relationships.reservations.data[].type':
        name: 'data.relationships.reservations.data[].type'
        description: |-
          Resource return type as of JSON:API standard,
                         always equal to `reservation`
        required: false
        example: null
        type: string
        custom: [ ]
      'data.relationships.reservations.data[].id':
        name: 'data.relationships.reservations.data[].id'
        description: |-
          Resource unique identifier, always starts with
                         `resrv_`.
        required: false
        example: null
        type: string
        custom: [ ]
      included:
        name: included
        description: 'Container for included relationships.'
        required: false
        example: null
        type: '?object[]'
        custom: [ ]
      'included[].type':
        name: 'included[].type'
        description: 'Resource return type as of JSON:API standard.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].id':
        name: 'included[].id'
        description: 'Resource unique identifier.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].attributes':
        name: 'included[].attributes'
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta:
        name: meta
        description: 'Container for metadata.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta.success:
        name: meta.success
        description: 'Response status summary, if `true` the call was successful.'
        required: false
        example: null
        type: boolean
        custom: [ ]
      meta.errors:
        name: meta.errors
        description: 'null|object[] If one or more errors occur this field will be filled with errors.'
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].reference_code':
        name: 'meta.errors[].reference_code'
        description: 'Error reference code for easy front-end retrieval.'
        required: false
        example: null
        type: integer
        custom: [ ]
      'meta.errors[].field':
        name: 'meta.errors[].field'
        description: |-
          null|string If an error occur linked to a form field this field will handle
                         the field name the error references to.
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].message':
        name: 'meta.errors[].message'
        description: 'The error message(s).'
        required: false
        example: null
        type: 'string|string[]'
        custom: [ ]
    auth:
      - headers
      - Authorization
      - 'Bearer 465vcPZV3b6dgk8EaDfea1h'
    controller: null
    method: null
    route: null
    custom: [ ]
