name: 'Events interactions'
description: |-

  Activities related to the interaction of the currently authenticated user with events
endpoints:
  - httpMethods:
      - GET
    uri: api/events
    metadata:
      groupName: 'Events interactions'
      groupDescription: |-

        Activities related to the interaction of the currently authenticated user with events
      subgroup: ''
      subgroupDescription: ''
      title: 'Events index'
      description: 'Lists all events and optionally on or many of their relations.'
      authenticated: true
      custom: [ ]
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 200
        content: |
          {
              "data": [
                  {
                      "type": "event_day",
                      "id": "evt_fe42d9d6092f4cde86d67e4fca313a49",
                      "attributes": {
                          "available_reservations": 9,
                          "date": "01\/01\/2023",
                          "location": "Smithfort"
                      },
                      "relationships": {
                          "reservations": {
                              "data": [
                                  {
                                      "type": "reservation",
                                      "id": "resrv_fac88ea6628a466f8f3ff4464c12130c"
                                  }
                              ]
                          },
                          "activities": {
                              "data": [
                                  {
                                      "type": "activity",
                                      "id": "act_04a71df315ec4fe8b0ab555200c83935"
                                  },
                                  {
                                      "type": "activity",
                                      "id": "act_07972666e17a4ac69de2f152fd75e03d"
                                  }
                              ]
                          }
                      }
                  },
                  {
                      "type": "event_day",
                      "id": "evt_316046ad43bc4750b1ce65f8a09658f1",
                      "attributes": {
                          "available_reservations": 9,
                          "date": "02\/02\/2023",
                          "location": "Windlerstad"
                      },
                      "relationships": {
                          "reservations": {
                              "data": [
                                  {
                                      "type": "reservation",
                                      "id": "resrv_f85e6c770ec2473cb9047eeed2bfc2c2"
                                  }
                              ]
                          },
                          "activities": {
                              "data": [
                                  {
                                      "type": "activity",
                                      "id": "act_b9f4d227bcfb49f79e1481e3f2e7d893"
                                  },
                                  {
                                      "type": "activity",
                                      "id": "act_5c2eefd3bf814837b81eba07769121d3"
                                  }
                              ]
                          }
                      }
                  }
              ],
              "included": [
                  {
                      "type": "activity",
                      "id": "act_04a71df315ec4fe8b0ab555200c83935",
                      "attributes": {
                          "starting_at": "12:30:00",
                          "ending_at": "14:23:23",
                          "title": "Fuga et dignissimos accusamus quibusdam vel.",
                          "available_reservations": 0,
                          "description": "Compiled description markdown"
                      }
                  },
                  {
                      "type": "activity",
                      "id": "act_07972666e17a4ac69de2f152fd75e03d",
                      "attributes": {
                          "starting_at": "15:30:00",
                          "ending_at": "06:02:26",
                          "title": "Maiores et laborum enim dolor repellendus et.",
                          "available_reservations": 0,
                          "description": "Compiled description markdown"
                      }
                  },
                  {
                      "type": "reservation",
                      "id": "resrv_fac88ea6628a466f8f3ff4464c12130c",
                      "attributes": {
                          "user": "usr_7fb676db17324097a29eefcfbd611cf1",
                          "event": "evt_fe42d9d6092f4cde86d67e4fca313a49",
                          "activity": "act_875df90f7fb84c6ea32fffb21d200ab4"
                      }
                  },
                  {
                      "type": "activity",
                      "id": "act_b9f4d227bcfb49f79e1481e3f2e7d893",
                      "attributes": {
                          "starting_at": "12:30:00",
                          "ending_at": "21:34:51",
                          "title": "Ea eum cupiditate eos.",
                          "available_reservations": 0,
                          "description": "Compiled description markdown"
                      }
                  },
                  {
                      "type": "activity",
                      "id": "act_5c2eefd3bf814837b81eba07769121d3",
                      "attributes": {
                          "starting_at": "15:30:00",
                          "ending_at": "15:52:24",
                          "title": "Dolorum non dolorem deleniti ullam.",
                          "available_reservations": 0,
                          "description": "Compiled description markdown"
                      }
                  },
                  {
                      "type": "reservation",
                      "id": "resrv_f85e6c770ec2473cb9047eeed2bfc2c2",
                      "attributes": {
                          "user": "usr_119167e659424661bb98b5402281ec17",
                          "event": "evt_316046ad43bc4750b1ce65f8a09658f1",
                          "activity": "act_1da71ee2d61d4851bbe641ed6bd1a13c"
                      }
                  }
              ],
              "meta": {
                  "success": true,
                  "errors": null
              }
          }
        headers: [ ]
        description: ''
        custom: [ ]
    responseFields:
      data:
        name: data
        description: 'Container for resources.'
        required: false
        example: null
        type: 'object[]'
        custom: [ ]
      data.type:
        name: data.type
        description: 'Resource return type as of JSON:API standard, always equal to `event_day`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.id:
        name: data.id
        description: 'Resource unique identifier, always starts with `evt_`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes:
        name: data.attributes
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.attributes.available_reservations:
        name: data.attributes.available_reservations
        description: 'Number of available reservation spot for the event.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.date:
        name: data.attributes.date
        description: 'Event date, formatted as day/month/year.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.location:
        name: data.attributes.location
        description: 'Event location.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.relationships:
        name: data.relationships
        description: 'Wrapper for included relationships.'
        required: false
        example: null
        type: '?object'
        custom: [ ]
      data.relationships.reservations:
        name: data.relationships.reservations
        description: 'Wrapper for reservations identification data.'
        required: false
        example: null
        type: '?object'
        custom: [ ]
      data.relationships.reservations.data:
        name: data.relationships.reservations.data
        description: 'Reservations identifier data container.'
        required: false
        example: null
        type: 'object[]'
        custom: [ ]
      'data.relationships.reservations.data[].type':
        name: 'data.relationships.reservations.data[].type'
        description: |-
          Resource return type as of JSON:API standard,
                         always equal to `reservation`
        required: false
        example: null
        type: string
        custom: [ ]
      'data.relationships.reservations.data[].id':
        name: 'data.relationships.reservations.data[].id'
        description: |-
          Resource unique identifier, always starts with
                         `resrv_`.
        required: false
        example: null
        type: string
        custom: [ ]
      data.relationships.activities:
        name: data.relationships.activities
        description: 'Wrapper for activities identification data.'
        required: false
        example: null
        type: '?object'
        custom: [ ]
      data.relationships.activities.data:
        name: data.relationships.activities.data
        description: 'Activities identifier data container.'
        required: false
        example: null
        type: 'object[]'
        custom: [ ]
      'data.relationships.activities.data[].type':
        name: 'data.relationships.activities.data[].type'
        description: |-
          Resource return type as of JSON:API standard,
                         always equal to `activity`
        required: false
        example: null
        type: string
        custom: [ ]
      'data.relationships.activities.data[].id':
        name: 'data.relationships.activities.data[].id'
        description: |-
          Resource unique identifier, always starts with
                         `act_`.
        required: false
        example: null
        type: string
        custom: [ ]
      included:
        name: included
        description: 'Container for included relationships.'
        required: false
        example: null
        type: '?object[]'
        custom: [ ]
      'included[].type':
        name: 'included[].type'
        description: 'Resource return type as of JSON:API standard.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].id':
        name: 'included[].id'
        description: 'Resource unique identifier.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].attributes':
        name: 'included[].attributes'
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta:
        name: meta
        description: 'Container for metadata.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta.success:
        name: meta.success
        description: 'Response status summary, if `true` the call was successful.'
        required: false
        example: null
        type: boolean
        custom: [ ]
      meta.errors:
        name: meta.errors
        description: 'null|object[] If one or more errors occur this field will be filled with errors.'
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].reference_code':
        name: 'meta.errors[].reference_code'
        description: 'Error reference code for easy front-end retrieval.'
        required: false
        example: null
        type: integer
        custom: [ ]
      'meta.errors[].field':
        name: 'meta.errors[].field'
        description: |-
          null|string If an error occur linked to a form field this field will handle
                         the field name the error references to.
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].message':
        name: 'meta.errors[].message'
        description: 'The error message(s).'
        required: false
        example: null
        type: 'string|string[]'
        custom: [ ]
    auth:
      - headers
      - Authorization
      - 'Bearer bfP5gaZ1V64ek6cDvdEa38h'
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: api/events/reserve
    metadata:
      groupName: 'Events interactions'
      groupDescription: |-

        Activities related to the interaction of the currently authenticated user with events
      subgroup: ''
      subgroupDescription: ''
      title: 'Reserve spots'
      description: |-
        Handle the reservation request of a user reserving the provided spots
        <aside class="notice">
             This call must be executed using the logged-in user token in order to subscribe the user.
             The authentication token will the ALWAYS be different from the authorization token used to retrieve the
             data and authenticate the user.
        </aside>
      authenticated: true
      custom: [ ]
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters:
      reservations:
        name: reservations
        description: |-
          Contains the reservation preferences of the user. Must contain
                         exactly the same number of objects as the event days.
        required: true
        example: null
        type: 'object[]'
        custom: [ ]
      'reservations[].date':
        name: 'reservations[].date'
        description: |-
          Must be a valid date in the format `day/month/year`, together
                         with the date uniquely identifies the event day.
        required: true
        example: 18/02/2023
        type: string
        custom: [ ]
      'reservations[].location':
        name: 'reservations[].location'
        description: |-
          Must be a valid location, together with the date uniquely
                         identifies the event day.
        required: true
        example: Florence
        type: string
        custom: [ ]
      'reservations[].absent':
        name: 'reservations[].absent'
        description: |-
          Required if `activity_reservations` is not provided, states that a
                         user
                         will not participate in the event in a given day, can be `true`/`false` but only true-ish value
                         is
                         significant.
        required: false
        example: false
        type: boolean
        custom: [ ]
      'reservations[].activity_reservations':
        name: 'reservations[].activity_reservations'
        description: |-
          Required if `absent` is not provided or is falsy,
                         defines the list of activities identifier a user want to reserve for a given day. All activities
                         must exist in the unique date-location pair.
        required: false
        example:
          - act_b9f4d227bcfb49f79e1481e3f2e7d893
          - act_5c2eefd3bf814837b81eba07769121d3
        type: 'string[]'
        custom: [ ]
    cleanBodyParameters:
      reservations:
        - date: 18/02/2023
          location: Florence
          absent: false
          activity_reservations:
            - act_b9f4d227bcfb49f79e1481e3f2e7d893
            - act_5c2eefd3bf814837b81eba07769121d3
    fileParameters: [ ]
    responses:
      - status: 200
        content: |
          {
              "data": {
                  "type": "user",
                  "id": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                  "attributes": {
                      "name": "Devonte Goldner",
                      "email": "imo********************",
                      "email_verified_at": "18\/02\/2023 11:05:51",
                      "token": "2|aFGHN9Ox9Uc42XfLqrXlY2xAzNwhQLDb7kIf3rjN"
                  },
                  "relationships": {
                      "reservations": {
                          "data": [
                              {
                                  "type": "reservation",
                                  "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180"
                              }
                          ]
                      }
                  }
              },
              "included": [
                  {
                      "type": "reservation",
                      "id": "resrv_1e302893c3cd4dcd8c7810ef1a07c180",
                      "attributes": {
                          "user": "usr_10833034c4dd47849af8ed8ea4a68a1b",
                          "event": "evt_d7e868f3083344f6bec2548db7979d6b",
                          "activity": "act_4c0158279c0148439fb285ebc7ad8c12"
                      }
                  }
              ],
              "meta": {
                  "success": true,
                  "errors": null
              }
          }
        headers: [ ]
        description: 'Reservation successful'
        custom: [ ]
      - status: 409
        content: |
          {
              "data": [],
              "meta": {
                  "success": false,
                  "errors": [
                      {
                          "reference_code": 0,
                          "field": null,
                          "message": ""
                      }
                  ]
              }
          }
        headers: [ ]
        description: 'One or more conflicts arised while reserving'
        custom: [ ]
      - status: 404
        content: '{"data":[],"meta":{"errors":{"reference_code":0,"field":null,"message":"No query results for model <model-name>"}}}'
        headers: [ ]
        description: 'Event/Activity not found'
        custom: [ ]
    responseFields:
      data:
        name: data
        description: 'Container for resource.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.type:
        name: data.type
        description: 'Resource return type as of JSON:API standard, always equal to `user`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.id:
        name: data.id
        description: 'Resource unique identifier, always starts with `usr_`.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes:
        name: data.attributes
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.attributes.name:
        name: data.attributes.name
        description: 'Current user full name.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.email:
        name: data.attributes.email
        description: 'Current user censored email.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.attributes.email_verified_at:
        name: data.attributes.email_verified_at
        description: |-
          Email verification datetime or null, if this field is
                         null for a given user he won't be allowed to reserve any spot.
        required: false
        example: null
        type: '?string'
        custom: [ ]
      data.attributes.token:
        name: data.attributes.token
        description: 'Current user authentication token.'
        required: false
        example: null
        type: string
        custom: [ ]
      data.relationships:
        name: data.relationships
        description: 'Wrapper for included relationships.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.relationships.reservations:
        name: data.relationships.reservations
        description: 'Wrapper for reservation identification data.'
        required: false
        example: null
        type: object
        custom: [ ]
      data.relationships.reservations.data:
        name: data.relationships.reservations.data
        description: 'Reservations identifier data container.'
        required: false
        example: null
        type: 'object[]'
        custom: [ ]
      'data.relationships.reservations.data[].type':
        name: 'data.relationships.reservations.data[].type'
        description: |-
          Resource return type as of JSON:API standard,
                         always equal to `reservation`
        required: false
        example: null
        type: string
        custom: [ ]
      'data.relationships.reservations.data[].id':
        name: 'data.relationships.reservations.data[].id'
        description: |-
          Resource unique identifier, always starts with
                         `resrv_`.
        required: false
        example: null
        type: string
        custom: [ ]
      included:
        name: included
        description: 'Container for included relationships.'
        required: false
        example: null
        type: 'object[]'
        custom: [ ]
      'included[].type':
        name: 'included[].type'
        description: 'Resource return type as of JSON:API standard.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].id':
        name: 'included[].id'
        description: 'Resource unique identifier.'
        required: false
        example: null
        type: string
        custom: [ ]
      'included[].attributes':
        name: 'included[].attributes'
        description: 'Resource attributes container.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta:
        name: meta
        description: 'Container for metadata.'
        required: false
        example: null
        type: object
        custom: [ ]
      meta.success:
        name: meta.success
        description: 'Response status summary, if `true` the call was successful.'
        required: false
        example: null
        type: boolean
        custom: [ ]
      meta.errors:
        name: meta.errors
        description: 'null|object[] If one or more errors occur this field will be filled with errors.'
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].reference_code':
        name: 'meta.errors[].reference_code'
        description: 'Error reference code for easy front-end retrieval.'
        required: false
        example: null
        type: integer
        custom: [ ]
      'meta.errors[].field':
        name: 'meta.errors[].field'
        description: |-
          null|string If an error occur linked to a form field this field will handle
                         the field name the error references to.
        required: false
        example: null
        type: ''
        custom: [ ]
      'meta.errors[].message':
        name: 'meta.errors[].message'
        description: 'The error message(s).'
        required: false
        example: null
        type: 'string|string[]'
        custom: [ ]
    auth:
      - headers
      - Authorization
      - 'Bearer D1V6bE3hdPcf5e4aa68Zgkv'
    controller: null
    method: null
    route: null
    custom: [ ]
